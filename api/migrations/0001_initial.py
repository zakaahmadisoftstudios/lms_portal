# Generated by Django 5.2.4 on 2025-07-11 13:05

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('grade_level', models.CharField(max_length=20)),
                ('section', models.CharField(max_length=10)),
                ('academic_year', models.CharField(max_length=20)),
                ('room_number', models.CharField(blank=True, max_length=20, null=True)),
                ('max_students', models.PositiveIntegerField(default=30)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'classes',
                'ordering': ['grade_level', 'section'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('credits', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'subjects',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('teacher', 'Teacher'), ('staff', 'Staff'), ('student', 'Student')], max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'profiles',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True)),
                ('roll_number', models.CharField(max_length=20)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('guardian_name', models.CharField(max_length=200)),
                ('guardian_phone', models.CharField(max_length=15)),
                ('guardian_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('emergency_contact', models.CharField(max_length=15)),
                ('admission_date', models.DateField()),
                ('blood_group', models.CharField(blank=True, max_length=5, null=True)),
                ('medical_conditions', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_enrolled', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='students', to='api.class')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'students',
                'ordering': ['user__first_name', 'user__last_name'],
                'unique_together': {('roll_number', 'class_enrolled')},
            },
        ),
        migrations.AddField(
            model_name='class',
            name='subjects',
            field=models.ManyToManyField(related_name='classes', to='api.subject'),
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=20, unique=True)),
                ('department', models.CharField(max_length=100)),
                ('qualification', models.CharField(max_length=200)),
                ('experience_years', models.PositiveIntegerField(default=0)),
                ('specialization', models.CharField(blank=True, max_length=200, null=True)),
                ('hire_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subjects', models.ManyToManyField(blank=True, related_name='teachers', to='api.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'teachers',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.AddField(
            model_name='class',
            name='teacher',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='classes', to='api.teacher'),
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('assignment_type', models.CharField(choices=[('homework', 'Homework'), ('project', 'Project'), ('quiz', 'Quiz'), ('test', 'Test'), ('exam', 'Exam')], default='homework', max_length=20)),
                ('total_marks', models.PositiveIntegerField()),
                ('due_date', models.DateTimeField()),
                ('instructions', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_assigned', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='api.class')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='api.subject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='api.teacher')),
            ],
            options={
                'db_table': 'assignments',
                'ordering': ['-due_date'],
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_obtained', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('grade_letter', models.CharField(blank=True, max_length=2, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('submitted_date', models.DateTimeField(blank=True, null=True)),
                ('graded_date', models.DateTimeField(auto_now_add=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='api.assignment')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='api.student')),
                ('graded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='graded_assignments', to='api.teacher')),
            ],
            options={
                'db_table': 'grades',
                'ordering': ['-graded_date'],
                'unique_together': {('student', 'assignment')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='class',
            unique_together={('grade_level', 'section', 'academic_year')},
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('excused', 'Excused')], default='present', max_length=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('marked_at', models.DateTimeField(auto_now_add=True)),
                ('class_attended', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='api.class')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='api.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='api.subject')),
                ('marked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marked_attendance', to='api.teacher')),
            ],
            options={
                'db_table': 'attendance',
                'ordering': ['-date', 'student__user__first_name'],
                'unique_together': {('student', 'class_attended', 'subject', 'date')},
            },
        ),
    ]
